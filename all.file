// ==========================================================================
// This file contains all code from the PetPal project
// NOT RECOMMENDED FOR ACTUAL DEVELOPMENT - FOR REFERENCE ONLY
// ==========================================================================

// ========================== INDEX.HTML ==========================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PetPal - Your Pet Care Solution</title>
    <meta name="description" content="PetPal provides exceptional care for your furry, feathered, and scaled companions.">
    <link rel="icon" type="image/svg+xml" href="/favicon.ico">
</head>
<body>
    <div id="root"></div>
    <script src="https://cdn.gpteng.co/gptengineer.js" type="module"></script>
    <script type="module" src="/src/main.tsx"></script>
</body>
</html>

// ========================== VITE.CONFIG.TS ==========================
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react-swc";
import path from "path";
import { componentTagger } from "lovable-tagger";

// https://vitejs.dev/config/
export default defineConfig(({ mode }) => ({
  base: "./", // Use relative paths for GitHub Pages
  server: {
    host: "::",
    port: 8080,
  },
  plugins: [
    react(),
    mode === 'development' && componentTagger(),
  ].filter(Boolean),
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "./src"),
    },
  },
}));

// ========================== MAIN.TSX ==========================
import { createRoot } from 'react-dom/client'
import App from './App.tsx'
import './index.css'

const root = document.getElementById("root");
if (root) {
  createRoot(root).render(<App />);
} else {
  console.error("Root element not found");
}

// ========================== REACT COMPONENTS ==========================

// --------- src/lib/utils.ts ---------
/**
 * Class name utility
 */
function cn(...inputs: any[]) {
  return inputs.filter(Boolean).join(" ");
}

// --------- src/components/ui/aspect-ratio.tsx ---------
/**
 * AspectRatio component from @radix-ui/react-aspect-ratio
 */
const AspectRatio = {
  Root: ({ children, ratio }: { children: React.ReactNode, ratio: number }) => {
    return <div style={{ position: 'relative', width: '100%', paddingBottom: `${100 / ratio}%` }}>
      <div style={{ position: 'absolute', width: '100%', height: '100%' }}>
        {children}
      </div>
    </div>;
  }
};

// --------- src/components/layout/Layout.tsx ---------
/**
 * Main layout component
 */
const Layout = ({ children }: { children: React.ReactNode }) => {
  return (
    <div className="flex flex-col min-h-screen">
      <Header />
      <main className="flex-grow pt-20">
        <PageTransition>
          {children}
        </PageTransition>
      </main>
      <Footer />
    </div>
  );
};

// --------- src/components/auth/AuthButtons.tsx ---------
/**
 * Authentication buttons component
 */
const AuthButtons = ({ fullWidth = false }: { fullWidth?: boolean }) => {
  return (
    <>
      <Button
        variant="ghost"
        className={cn(
          "text-foreground/80 hover:text-foreground",
          fullWidth && "w-full justify-center"
        )}
        asChild
      >
        <Link to="/auth/sign-in">Sign In</Link>
      </Button>
      <Button
        variant="default"
        className={cn(fullWidth && "w-full justify-center")}
        asChild
      >
        <Link to="/auth/sign-up">Sign Up</Link>
      </Button>
    </>
  );
};

// --------- src/components/ui/progress.tsx ---------
/**
 * Progress component from @radix-ui/react-progress
 */
const Progress = React.forwardRef(({ className, value, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "relative h-4 w-full overflow-hidden rounded-full bg-secondary",
      className
    )}
    {...props}
  >
    <div
      className="h-full w-full flex-1 bg-primary transition-all"
      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
    />
  </div>
));
Progress.displayName = "Progress";

// --------- src/components/ui/PageTransition.tsx ---------
/**
 * Page transition component
 */
const PageTransition = ({ children }: { children: React.ReactNode }) => {
  const location = useLocation();
  const [displayLocation, setDisplayLocation] = useState(location);
  const [transitionStage, setTransitionStage] = useState("fadeIn");

  useEffect(() => {
    if (location.pathname !== displayLocation.pathname) {
      setTransitionStage("fadeOut");
    }
  }, [location, displayLocation]);

  const handleAnimationEnd = () => {
    if (transitionStage === "fadeOut") {
      setTransitionStage("fadeIn");
      setDisplayLocation(location);
      
      // Scroll to top on page change
      window.scrollTo(0, 0);
    }
  };

  return (
    <div
      className={`transition-opacity duration-300 ease-in-out ${
        transitionStage === "fadeIn" ? "opacity-100" : "opacity-0"
      }`}
      onAnimationEnd={handleAnimationEnd}
    >
      {children}
    </div>
  );
};

// ================================================
// APP.TSX - Main Application Component
// ================================================

import React, { useState, useEffect } from "react";
import { BrowserRouter as Router, Routes, Route, Link, useLocation } from "react-router-dom";
import { Check, ChevronDown, ChevronLeft, ChevronRight, 
         Menu, X, Facebook, Instagram, Twitter, 
         Eye, EyeOff, Search, MapPin, Phone, Clock, 
         ArrowRight, Circle, GripVertical, AlertTriangle,
         MessageCircle, Video, MoreHorizontal } from "lucide-react";

// Input component simulated
const Input = React.forwardRef(({ className, ...props }, ref) => (
  <input
    className={cn(
      "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
      className
    )}
    ref={ref}
    {...props}
  />
));
Input.displayName = "Input";

// Label component simulated
const Label = React.forwardRef(({ className, ...props }, ref) => (
  <label
    ref={ref}
    className={cn(
      "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
      className
    )}
    {...props}
  />
));
Label.displayName = "Label";

// Checkbox component simulated
const Checkbox = React.forwardRef(({ className, checked, onCheckedChange, ...props }, ref) => (
  <div className={cn("flex items-center space-x-2", className)}>
    <input
      ref={ref}
      type="checkbox"
      checked={checked}
      onChange={(e) => onCheckedChange?.(e.target.checked)}
      className="h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary"
      {...props}
    />
  </div>
));
Checkbox.displayName = "Checkbox";

// Tabs components simulated
const Tabs = ({ defaultValue, className, children }) => {
  const [value, setValue] = useState(defaultValue);
  
  return (
    <div className={className}>
      {React.Children.map(children, (child) => {
        if (child.type === TabsList || child.type === TabsContent) {
          return React.cloneElement(child, { value, setValue });
        }
        return child;
      })}
    </div>
  );
};

const TabsList = ({ className, children, value, setValue }) => (
  <div className={className}>
    {React.Children.map(children, (child) => {
      if (child.type === TabsTrigger) {
        return React.cloneElement(child, { 
          isActive: child.props.value === value,
          onClick: () => setValue(child.props.value),
          value
        });
      }
      return child;
    })}
  </div>
);

const TabsTrigger = ({ className, children, value, isActive, onClick }) => (
  <button
    className={cn(
      className,
      isActive && "bg-background border-b-2 border-primary"
    )}
    onClick={onClick}
  >
    {children}
  </button>
);

const TabsContent = ({ className, children, value: tabValue, value: currentValue }) => {
  if (tabValue !== currentValue) return null;
  return <div className={className}>{children}</div>;
};

// EmergencyLocator page component
const EmergencyLocator = () => {
  // Mock emergency vet clinics data
  const emergencyClinics = [
    {
      id: 1,
      name: "City Animal Emergency Hospital",
      address: "123 Emergency Drive, New York, NY",
      phone: "(555) 911-PETS",
      hours: "Open 24/7",
      distance: "1.2 miles away",
      status: "Open now",
      waitTime: "~15 min wait"
    },
    {
      id: 2,
      name: "Metro Pet Emergency Center",
      address: "456 Urgent Care Lane, New York, NY",
      phone: "(555) 247-VETS",
      hours: "Open 24/7",
      distance: "2.8 miles away",
      status: "Open now",
      waitTime: "~30 min wait"
    },
    {
      id: 3,
      name: "Brooklyn Animal Critical Care",
      address: "789 Critical Path, Brooklyn, NY",
      phone: "(555) 365-HELP",
      hours: "Open 24/7",
      distance: "4.3 miles away",
      status: "Open now",
      waitTime: "~10 min wait"
    }
  ];

  // Emergency guidelines
  const emergencyGuidelines = [
    {
      condition: "Difficulty Breathing",
      symptoms: "Labored breathing, gasping, blue or pale gums",
      action: "Immediate veterinary attention required"
    },
    {
      condition: "Severe Bleeding",
      symptoms: "Uncontrolled bleeding, large wounds",
      action: "Apply pressure with clean cloth and seek immediate care"
    },
    {
      condition: "Seizures",
      symptoms: "Convulsions, loss of consciousness, paddling legs",
      action: "Time the seizure, keep away from hazards, seek immediate care"
    },
    {
      condition: "Potential Poisoning",
      symptoms: "Vomiting, drooling, lethargy after ingesting something suspicious",
      action: "Call pet poison hotline (888-426-4435) and seek vet care"
    }
  ];

  return (
    <div className="page-container">
      {/* Alert Banner */}
      <div className="bg-destructive/10 border border-destructive/30 rounded-xl p-4 mb-12 flex items-center">
        <AlertTriangle className="h-6 w-6 text-destructive mr-3 shrink-0" />
        <div>
          <p className="font-medium text-destructive">For life-threatening emergencies:</p>
          <p className="text-foreground/80">Call ahead to the nearest emergency clinic while en route. This service helps locate care but is not a substitute for immediate medical attention.</p>
        </div>
      </div>

      {/* Hero Section */}
      <div className="text-center mb-16">
        <div className="inline-block px-4 py-1.5 mb-6 rounded-full bg-primary/10 text-primary text-sm font-medium">
          Emergency Services
        </div>
        <h1 className="text-4xl md:text-5xl font-display font-medium tracking-tight mb-6">
          Emergency Pet Locator
        </h1>
        <p className="text-xl text-muted-foreground mb-8 max-w-2xl mx-auto">
          Quickly find emergency veterinary care near you when every second counts.
        </p>
      </div>

      {/* Search Box */}
      <div className="bg-card border border-border rounded-2xl p-6 mb-12 shadow-sm">
        <form className="flex flex-col md:flex-row gap-4">
          <div className="relative flex-grow">
            <MapPin className="absolute left-3 top-3 h-5 w-5 text-muted-foreground" />
            <Input 
              type="text" 
              placeholder="Enter your location"
              className="pl-10 h-12"
              defaultValue="New York, NY" 
            />
          </div>
          <Button className="h-12 px-8">Find Emergency Care</Button>
        </form>
      </div>

      {/* Results */}
      <div className="mb-16">
        <div className="flex justify-between items-center mb-6">
          <h2 className="text-2xl font-display font-medium">Nearby Emergency Clinics</h2>
          <span className="text-muted-foreground">3 facilities found</span>
        </div>
        
        <div className="space-y-4">
          {emergencyClinics.map((clinic) => (
            <div key={clinic.id} className="bg-card border border-border rounded-xl overflow-hidden transition-all hover:shadow-md hover:border-primary/20">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4 p-6">
                <div className="md:col-span-2">
                  <div className="flex flex-wrap gap-2 mb-1">
                    <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                      {clinic.status}
                    </span>
                    <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                      {clinic.waitTime}
                    </span>
                    <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                      {clinic.distance}
                    </span>
                  </div>
                  
                  <h3 className="text-xl font-medium mb-2">{clinic.name}</h3>
                  
                  <div className="space-y-2 text-sm">
                    <div className="flex items-start">
                      <MapPin className="h-5 w-5 text-muted-foreground mr-2 mt-0.5" />
                      <span>{clinic.address}</span>
                    </div>
                    <div className="flex items-start">
                      <Phone className="h-5 w-5 text-muted-foreground mr-2 mt-0.5" />
                      <span>{clinic.phone}</span>
                    </div>
                    <div className="flex items-start">
                      <Clock className="h-5 w-5 text-muted-foreground mr-2 mt-0.5" />
                      <span className="font-medium text-green-600">{clinic.hours}</span>
                    </div>
                  </div>
                </div>
                
                <div className="flex flex-col justify-center gap-3">
                  <Button className="w-full" variant="default">
                    Get Directions
                  </Button>
                  <Button className="w-full" variant="outline">
                    Call Clinic
                  </Button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Emergency Guidelines */}
      <div className="mb-16">
        <h2 className="text-2xl font-display font-medium mb-6">
          Pet Emergency Guidelines
        </h2>
        <p className="text-muted-foreground mb-6">
          Recognize these common emergency situations and know how to respond:
        </p>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {emergencyGuidelines.map((guideline) => (
            <div key={guideline.condition} className="bg-card border border-border rounded-xl p-5">
              <h3 className="text-lg font-medium mb-2">{guideline.condition}</h3>
              <p className="text-sm mb-1"><span className="font-medium">Signs:</span> {guideline.symptoms}</p>
              <p className="text-sm text-destructive font-medium">{guideline.action}</p>
            </div>
          ))}
        </div>
      </div>

      {/* Emergency Kit */}
      <div className="bg-primary/5 rounded-2xl p-8 md:p-12">
        <h3 className="text-2xl font-display font-medium mb-6">Pet Emergency Kit Essentials</h3>
        <p className="text-muted-foreground mb-6">
          Be prepared for emergencies by keeping these items on hand:
        </p>
        
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
          <div className="bg-background rounded-xl p-4">
            <ul className="space-y-2">
              <li>Gauze pads and rolls</li>
              <li>Adhesive tape</li>
              <li>Cotton balls</li>
              <li>Fresh 3% hydrogen peroxide</li>
            </ul>
          </div>
          <div className="bg-background rounded-xl p-4">
            <ul className="space-y-2">
              <li>Digital thermometer</li>
              <li>Tweezers</li>
              <li>Scissors (blunt-tipped)</li>
              <li>Styptic powder</li>
            </ul>
          </div>
          <div className="bg-background rounded-xl p-4">
            <ul className="space-y-2">
              <li>Pet carrier</li>
              <li>Muzzle (not for vomiting pets)</li>
              <li>Leash and collar</li>
              <li>Your vet's contact information</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

// ChatWithVets page component
const ChatWithVets = () => {
  const benefits = [
    "24/7 access to licensed veterinarians",
    "Quick responses to non-emergency questions",
    "Convenient follow-up consultations",
    "Secure and private communication",
    "Prescription refills when appropriate",
    "Lower cost than in-person visits for minor concerns"
  ];

  const faqs = [
    {
      question: "How does the chat service work?",
      answer: "Our telemedicine platform connects you with licensed veterinarians via video, voice, or text chat. Simply create an account, describe your pet's issue, and you'll be connected with a qualified vet who can provide guidance."
    },
    {
      question: "Can vets prescribe medication through chat?",
      answer: "In some cases, veterinarians can prescribe or refill medications through our platform, but this depends on your location, regulations, and whether the vet has an established relationship with your pet."
    },
    {
      question: "What issues are appropriate for telemedicine?",
      answer: "Telemedicine is suitable for non-emergency concerns, follow-up questions, behavior issues, nutritional advice, and minor symptoms. Emergency situations always require immediate in-person veterinary care."
    },
    {
      question: "How much does it cost?",
      answer: "We offer various plans starting at $15 for a single text consultation. Our monthly subscription provides unlimited text consultations and discounted video appointments."
    }
  ];

  return (
    <div className="page-container">
      <div className="text-center mb-16">
        <div className="inline-block px-4 py-1.5 mb-6 rounded-full bg-primary/10 text-primary text-sm font-medium">
          Telemedicine
        </div>
        <h1 className="text-4xl md:text-5xl font-display font-medium tracking-tight mb-6">
          Chat With Licensed Veterinarians
        </h1>
        <p className="text-xl text-muted-foreground mb-8 max-w-2xl mx-auto">
          Get expert veterinary advice from the comfort of your home, anytime you need it.
        </p>
      </div>

      {/* Service Types Tabs */}
      <div className="mb-16">
        <Tabs defaultValue="text" className="w-full">
          <TabsList className="grid w-full grid-cols-3 mb-8">
            <TabsTrigger value="text" className="text-base py-3">
              <MessageCircle className="h-5 w-5 mr-2" />
              Text Chat
            </TabsTrigger>
            <TabsTrigger value="video" className="text-base py-3">
              <Video className="h-5 w-5 mr-2" />
              Video Call
            </TabsTrigger>
            <TabsTrigger value="phone" className="text-base py-3">
              <Phone className="h-5 w-5 mr-2" />
              Phone Call
            </TabsTrigger>
          </TabsList>
          
          <TabsContent value="text" className="animate-fade-in">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
              <div>
                <h2 className="text-3xl font-display font-medium mb-4">Text Chat Consultations</h2>
                <p className="mb-6 text-muted-foreground">
                  Send messages and photos to licensed veterinarians and receive expert advice for non-emergency concerns.
                </p>
                <ul className="space-y-3 mb-6">
                  <li className="flex items-center">
                    <Clock className="h-5 w-5 text-primary mr-2" />
                    <span>Responses within 30 minutes</span>
                  </li>
                  <li className="flex items-center">
                    <Check className="h-5 w-5 text-primary mr-2" />
                    <span>Share photos and medical history</span>
                  </li>
                  <li className="flex items-center">
                    <Check className="h-5 w-5 text-primary mr-2" />
                    <span>Secure messaging platform</span>
                  </li>
                </ul>
                <Button className="rounded-full px-8 group">
                  Start Text Chat
                  <ArrowRight className="ml-2 h-4 w-4 transition-transform duration-300 group-hover:translate-x-1" />
                </Button>
              </div>
              <div className="relative">
                <div className="absolute -inset-4 bg-gradient-to-r from-primary/10 to-primary/5 rounded-3xl blur-xl opacity-60"></div>
                <img
                  src="https://images.unsplash.com/photo-1616587894289-86480e533129?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80"
                  alt="Pet owner texting with vet"
                  className="relative rounded-2xl shadow-md w-full h-80 object-cover"
                />
              </div>
            </div>
          </TabsContent>
          
          <TabsContent value="video" className="animate-fade-in">
            {/* Video call content similar to text chat */}
            <div>Video call content would go here</div>
          </TabsContent>
          
          <TabsContent value="phone" className="animate-fade-in">
            {/* Phone call content similar to text chat */}
            <div>Phone call content would go here</div>
          </TabsContent>
        </Tabs>
      </div>

      {/* Benefits */}
      <div className="mb-16">
        <h2 className="text-3xl font-display font-medium mb-8 text-center">
          Benefits of Veterinary Telemedicine
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {benefits.map((benefit, index) => (
            <div key={index} className="bg-card border border-border rounded-xl p-6 transition-all hover:shadow-md hover:border-primary/20">
              <div className="flex items-start">
                <span className="mr-3 bg-primary/10 rounded-full p-1.5 text-primary">
                  <Check className="h-5 w-5" />
                </span>
                <span className="text-lg">{benefit}</span>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* FAQs */}
      <div className="mb-16">
        <h2 className="text-3xl font-display font-medium mb-8 text-center">
          Frequently Asked Questions
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {faqs.map((faq, index) => (
            <div key={index} className="bg-card border border-border rounded-xl p-6">
              <h3 className="text-lg font-medium mb-2">{faq.question}</h3>
              <p className="text-muted-foreground">{faq.answer}</p>
            </div>
          ))}
        </div>
      </div>

      {/* CTA */}
      <div className="bg-gradient-to-br from-primary to-primary/80 rounded-2xl p-8 md:p-12 text-center text-white">
        <h3 className="text-2xl font-display font-medium mb-4">Ready to get expert veterinary advice?</h3>
        <p className="mb-6 text-white/80 max-w-lg mx-auto">
          Sign up today and get your first consultation at 50% off.
        </p>
        <Button variant="outline" className="bg-white text-primary hover:bg-white/90 rounded-full px-8">
          Start Now
        </Button>
      </div>
    </div>
  );
};

// HomePage component
const HomePage = () => {
  return (
    <div className="home-page">
      <section className="hero-section bg-gradient-to-br from-primary/5 to-secondary/10 rounded-3xl p-12 mb-20">
        <div className="text-center">
          <h1 className="text-5xl font-display font-medium mb-6">Welcome to PetPal</h1>
          <p className="text-xl mb-8 max-w-2xl mx-auto">Your complete pet care solution for all your furry friends.</p>
          <Button size="lg">Explore Our Services</Button>
        </div>
      </section>
      
      <section className="services-section mb-20">
        <h2 className="text-3xl font-display font-medium mb-8 text-center">Our Services</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <ServiceCard 
            title="Pet Grooming" 
            description="Professional grooming services for all breeds"
            icon={<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M12 2L2 7l10 5 10-5-10-5z"/></svg>}
            path="/services/pet-grooming"
          />
          <ServiceCard 
            title="Emergency Locator" 
            description="Find emergency veterinary care near you"
            icon={<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><circle cx="12" cy="12" r="10"/><path d="M12 8v4M12 16h.01"/></svg>}
            path="/services/emergency-locator"
          />
          <ServiceCard 
            title="Chat with Vets" 
            description="Get expert advice from licensed veterinarians"
            icon={<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"/></svg>}
            path="/services/chat-with-vets"
          />
        </div>
      </section>
      
      <section className="cta-section bg-primary/5 rounded-2xl p-8 md:p-12 flex flex-col md:flex-row md:items-center justify-between mb-20">
        <div>
          <h3 className="text-2xl font-display font-medium mb-2">Ready to pamper your pet?</h3>
          <p className="text-muted-foreground mb-6 md:mb-0">Join thousands of happy pet owners using PetPal.</p>
        </div>
        <Button size="lg" className="rounded-full px-8 group whitespace-nowrap">
          Get Started
          <ArrowRight className="ml-2 h-4 w-4 transition-transform duration-300 group-hover:translate-x-1" />
        </Button>
      </section>
    </div>
  );
};

// Main App component
const App = () => {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<Layout><HomePage /></Layout>} />
        <Route path="/services/pet-grooming" element={<Layout><PetGrooming /></Layout>} />
        <Route path="/services/emergency-locator" element={<Layout><EmergencyLocator /></Layout>} />
        <Route path="/services/chat-with-vets" element={<Layout><ChatWithVets /></Layout>} />
        <Route path="/auth/sign-in" element={<Layout><SignIn /></Layout>} />
        <Route path="/auth/sign-up" element={<Layout><SignUp /></Layout>} />
        {/* Add other routes as needed */}
      </Routes>
    </Router>
  );
};

export default App;

// ========================== END OF FILE ==========================
